<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd" >

    <description>rabbitmq configure</description>

    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}"  virtual-host="${mq.vhost}"/>
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- amqp template声明-->
    <rabbit:template exchange="amqpExchange" id="amqpTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter" />

    <rabbit:template exchange="amqpExchange" id="rabbitTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter" />

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />


    <!-- 启用spring rabbit注解方式 -->
    <bean id="rabbitListenerContainerFactory"
          class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="messageConverter" ref="jsonMessageConverter" />
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="concurrentConsumers" value="3" />
        <property name="maxConcurrentConsumers" value="10" />
    </bean>


    <!-- 定义消息队列 -->
    <rabbit:queue name="test_queue_01" id="test_queue_01" durable="true" auto-delete="false" exclusive="false" />


    <rabbit:queue name="test_queue_11" durable="true" auto-delete="false"/>
    <rabbit:queue name="test_queue_12" durable="true" auto-delete="false"/>


    <!-- 声明交换器0，绑定消息队列  direct 一个队列通过一个固定的Routing-key(通常是队列的名字)进行绑定 -->
    <rabbit:direct-exchange name="test-mq-exchange" durable="true" auto-delete="false" id="test-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue_01" key="test_queueKey_01"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <!-- 声明交换器1，绑定消息队列  fanout -->
    <rabbit:fanout-exchange id="test-mq-fanout" name="test-mq-fanout" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue_11"></rabbit:binding>
            <rabbit:binding queue="test_queue_12"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>



    <!-- 声明消费者0 container -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="test_queue_01" ref="queueListenner" />
    </rabbit:listener-container>

    <!-- 消费者监听器 -->
    <bean id="queueListenner" class="net.logvv.papercuphone.consumer.QueueListenner" />
    <bean id="cupickListenner" class="net.logvv.papercuphone.consumer.CupickListenner" />


    <!-- 声明消费者1 container -->
    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener ref="cupickListenner" method="onMessage" queues="test_queue_11,test_queue_12" />
    </rabbit:listener-container>

</beans>